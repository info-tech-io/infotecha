name: Build Module

on:
  repository_dispatch:
    types: [build-module]
  workflow_dispatch:
    inputs:
      module_name:
        description: 'Module name to build'
        required: true
        type: string
      content_repo:
        description: 'Content repository name'
        required: true
        type: string

env:
  MODULE_NAME: ${{ github.event.client_payload.module_name || github.event.inputs.module_name }}
  CONTENT_REPO: ${{ github.event.client_payload.content_repo || github.event.inputs.content_repo }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout infotecha repository
      uses: actions/checkout@v4
      
    - name: Checkout hugo-base template
      uses: actions/checkout@v4
      with:
        repository: info-tech-io/hugo-base
        path: hugo-base
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Checkout module content
      uses: actions/checkout@v4
      with:
        repository: info-tech-io/${{ env.CONTENT_REPO }}
        path: module-content
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.148.2'
        extended: true
        
    - name: Build module site
      run: |
        echo "üèóÔ∏è Building module: ${{ env.MODULE_NAME }}"
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–±–æ—Ä–∫–∏
        mkdir -p build-workspace
        cd build-workspace
        
        # –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω hugo-base
        cp -r ../hugo-base/* .
        cp -r ../hugo-base/.* . 2>/dev/null || true
        
        # –ó–∞–º–µ–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è (–µ—Å–ª–∏ –ø–∞–ø–∫–∞ content –µ—Å—Ç—å –≤ –º–æ–¥—É–ª–µ)
        if [ -d "../module-content/content" ]; then
            echo "üìÇ Using content from module repository"
            rm -rf content/
            cp -r ../module-content/content/ ./
        else
            echo "‚ö†Ô∏è No content/ folder in module repository, using default"
        fi
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Hugo –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–æ–¥—É–ª—è
        MODULE_SUBDOMAIN=$(jq -r --arg module "${{ env.MODULE_NAME }}" '.modules[$module].subdomain' ../modules.json)
        MODULE_TITLE=$(jq -r --arg module "${{ env.MODULE_NAME }}" '.modules[$module].name' ../modules.json)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º hugo.toml
        sed -i "s|baseURL = '.*'|baseURL = 'https://${MODULE_SUBDOMAIN}.infotecha.ru/'|" hugo.toml
        sed -i "s|title = '.*'|title = '${MODULE_TITLE}'|" hugo.toml
        
        echo "üéØ Configuration updated:"
        echo "  Base URL: https://${MODULE_SUBDOMAIN}.infotecha.ru/"
        echo "  Title: ${MODULE_TITLE}"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º submodules –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        git submodule update --init --recursive || echo "No submodules or already initialized"
        
        # –°–æ–±–∏—Ä–∞–µ–º —Å–∞–π—Ç
        hugo --minify --gc
        
        echo "‚úÖ Site built successfully"
        ls -la public/
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          set -e
          
          MODULE_NAME="${{ env.MODULE_NAME }}"
          MODULE_SUBDOMAIN=$(echo "$MODULE_NAME" | tr '_' '-')
          
          echo "üöÄ Deploying module: $MODULE_NAME to subdomain: $MODULE_SUBDOMAIN"
          
          # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –º–æ–¥—É–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          sudo mkdir -p "/var/www/infotecha.ru/${MODULE_SUBDOMAIN}"
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
          sudo chown -R www-data:www-data "/var/www/infotecha.ru/${MODULE_SUBDOMAIN}"
          
          echo "‚úÖ Module deployment directory prepared"
          
    - name: Upload built site
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        source: "build-workspace/public/*"
        target: "/tmp/infotecha-deploy-${{ env.MODULE_NAME }}/"
        strip_components: 2
        
    - name: Complete deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          set -e
          
          MODULE_NAME="${{ env.MODULE_NAME }}"
          MODULE_SUBDOMAIN=$(echo "$MODULE_NAME" | tr '_' '-')
          DEPLOY_DIR="/tmp/infotecha-deploy-${MODULE_NAME}"
          TARGET_DIR="/var/www/infotecha.ru/${MODULE_SUBDOMAIN}"
          
          echo "üì¶ Deploying files to: $TARGET_DIR"
          
          # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
          sudo cp -r "$DEPLOY_DIR"/* "$TARGET_DIR/"
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
          sudo chown -R www-data:www-data "$TARGET_DIR"
          sudo chmod -R 755 "$TARGET_DIR"
          
          # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          rm -rf "$DEPLOY_DIR"
          
          # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Apache –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π  
          sudo systemctl reload apache2
          
          echo "‚úÖ Module $MODULE_NAME deployed successfully"
          echo "üåê Available at: https://${MODULE_SUBDOMAIN}.infotecha.ru"