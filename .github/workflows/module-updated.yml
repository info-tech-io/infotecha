name: Module Updated Handler

on:
  repository_dispatch:
    types: [module-updated]

jobs:
  update-module:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout infotecha repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Parse module update payload
      id: parse
      run: |
        echo "module_name=${{ github.event.client_payload.module_name }}" >> $GITHUB_OUTPUT
        echo "content_repo=${{ github.event.client_payload.content_repo }}" >> $GITHUB_OUTPUT
        echo "updated_at=${{ github.event.client_payload.updated_at }}" >> $GITHUB_OUTPUT
        
        echo "📦 Module Update Request:"
        echo "  Module: ${{ github.event.client_payload.module_name }}"
        echo "  Repo: ${{ github.event.client_payload.content_repo }}"
        echo "  Updated: ${{ github.event.client_payload.updated_at }}"
        
    - name: Update modules.json registry
      id: update-registry
      run: |
        MODULE_NAME="${{ steps.parse.outputs.module_name }}"
        UPDATED_AT="${{ steps.parse.outputs.updated_at }}"
        
        echo "🔄 Updating modules.json for module: $MODULE_NAME"
        
        # Обновляем дату последнего обновления модуля
        jq --arg module "$MODULE_NAME" --arg date "$UPDATED_AT" \
           '.modules[$module].last_updated = $date | .last_updated = now | strftime("%Y-%m-%dT%H:%M:%SZ")' \
           modules.json > modules.json.tmp
        
        mv modules.json.tmp modules.json
        
        echo "✅ Registry updated"
        
    - name: Trigger module build
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        repository: ${{ github.repository }}
        event-type: build-module
        client-payload: |
          {
            "module_name": "${{ steps.parse.outputs.module_name }}",
            "content_repo": "${{ steps.parse.outputs.content_repo }}",
            "trigger": "content-update"
          }
          
    - name: Commit registry changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "chore: update ${{ steps.parse.outputs.module_name }} module timestamp"
        file_pattern: modules.json
        commit_user_name: "InfoTech.io Bot"
        commit_user_email: "bot@infotecha.ru"